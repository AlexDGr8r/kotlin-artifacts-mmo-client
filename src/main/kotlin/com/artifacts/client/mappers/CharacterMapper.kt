package com.artifacts.client.mappers

import com.artifacts.client.domain.CharacterEntity
import com.artifacts.client.openapi.models.CharacterSchema
import com.artifacts.client.openapi.models.CharacterSkin

/**
 * Mapping utilities between API model (CharacterSchema) and persistence entity (CharacterEntity).
 */
object CharacterMapper {
    fun CharacterSchema.toEntity(): CharacterEntity = CharacterEntity(
        name = this.name,
        account = this.account,
        skin = this.skin.toString(), // enum -> string value (e.g., "men1")
        level = this.level,
        xp = this.xp,
        max_xp = this.maxXp,
        gold = this.gold,
        speed = this.speed,
        mining_level = this.miningLevel,
        mining_xp = this.miningXp,
        mining_max_xp = this.miningMaxXp,
        woodcutting_level = this.woodcuttingLevel,
        woodcutting_xp = this.woodcuttingXp,
        woodcutting_max_xp = this.woodcuttingMaxXp,
        fishing_level = this.fishingLevel,
        fishing_xp = this.fishingXp,
        fishing_max_xp = this.fishingMaxXp,
        weaponcrafting_level = this.weaponcraftingLevel,
        weaponcrafting_xp = this.weaponcraftingXp,
        weaponcrafting_max_xp = this.weaponcraftingMaxXp,
        gearcrafting_level = this.gearcraftingLevel,
        gearcrafting_xp = this.gearcraftingXp,
        gearcrafting_max_xp = this.gearcraftingMaxXp,
        jewelrycrafting_level = this.jewelrycraftingLevel,
        jewelrycrafting_xp = this.jewelrycraftingXp,
        jewelrycrafting_max_xp = this.jewelrycraftingMaxXp,
        cooking_level = this.cookingLevel,
        cooking_xp = this.cookingXp,
        cooking_max_xp = this.cookingMaxXp,
        alchemy_level = this.alchemyLevel,
        alchemy_xp = this.alchemyXp,
        alchemy_max_xp = this.alchemyMaxXp,
        hp = this.hp,
        max_hp = this.maxHp,
        haste = this.haste,
        critical_strike = this.criticalStrike,
        wisdom = this.wisdom,
        prospecting = this.prospecting,
        attack_fire = this.attackFire,
        attack_earth = this.attackEarth,
        attack_water = this.attackWater,
        attack_air = this.attackAir,
        dmg = this.dmg,
        dmg_fire = this.dmgFire,
        dmg_earth = this.dmgEarth,
        dmg_water = this.dmgWater,
        dmg_air = this.dmgAir,
        res_fire = this.resFire,
        res_earth = this.resEarth,
        res_water = this.resWater,
        res_air = this.resAir,
        x = this.x,
        y = this.y,
        cooldown = this.cooldown,
        weapon_slot = this.weaponSlot,
        rune_slot = this.runeSlot,
        shield_slot = this.shieldSlot,
        helmet_slot = this.helmetSlot,
        body_armor_slot = this.bodyArmorSlot,
        leg_armor_slot = this.legArmorSlot,
        boots_slot = this.bootsSlot,
        ring1_slot = this.ring1Slot,
        ring2_slot = this.ring2Slot,
        amulet_slot = this.amuletSlot,
        artifact1_slot = this.artifact1Slot,
        artifact2_slot = this.artifact2Slot,
        artifact3_slot = this.artifact3Slot,
        utility1_slot = this.utility1Slot,
        utility1_slot_quantity = this.utility1SlotQuantity,
        utility2_slot = this.utility2Slot,
        utility2_slot_quantity = this.utility2SlotQuantity,
        bag_slot = this.bagSlot,
        task = this.task,
        task_type = this.taskType,
        task_progress = this.taskProgress,
        task_total = this.taskTotal,
        inventory_max_items = this.inventoryMaxItems,
        cooldown_expiration = this.cooldownExpiration
    )

    fun CharacterEntity.toSchema(): CharacterSchema = CharacterSchema(
        name = this.name,
        account = this.account,
        skin = CharacterSkin.decode(this.skin) ?: CharacterSkin.men1,
        level = this.level,
        xp = this.xp,
        maxXp = this.max_xp,
        gold = this.gold,
        speed = this.speed,
        miningLevel = this.mining_level,
        miningXp = this.mining_xp,
        miningMaxXp = this.mining_max_xp,
        woodcuttingLevel = this.woodcutting_level,
        woodcuttingXp = this.woodcutting_xp,
        woodcuttingMaxXp = this.woodcutting_max_xp,
        fishingLevel = this.fishing_level,
        fishingXp = this.fishing_xp,
        fishingMaxXp = this.fishing_max_xp,
        weaponcraftingLevel = this.weaponcrafting_level,
        weaponcraftingXp = this.weaponcrafting_xp,
        weaponcraftingMaxXp = this.weaponcrafting_max_xp,
        gearcraftingLevel = this.gearcrafting_level,
        gearcraftingXp = this.gearcrafting_xp,
        gearcraftingMaxXp = this.gearcrafting_max_xp,
        jewelrycraftingLevel = this.jewelrycrafting_level,
        jewelrycraftingXp = this.jewelrycrafting_xp,
        jewelrycraftingMaxXp = this.jewelrycrafting_max_xp,
        cookingLevel = this.cooking_level,
        cookingXp = this.cooking_xp,
        cookingMaxXp = this.cooking_max_xp,
        alchemyLevel = this.alchemy_level,
        alchemyXp = this.alchemy_xp,
        alchemyMaxXp = this.alchemy_max_xp,
        hp = this.hp,
        maxHp = this.max_hp,
        haste = this.haste,
        criticalStrike = this.critical_strike,
        wisdom = this.wisdom,
        prospecting = this.prospecting,
        attackFire = this.attack_fire,
        attackEarth = this.attack_earth,
        attackWater = this.attack_water,
        attackAir = this.attack_air,
        dmg = this.dmg,
        dmgFire = this.dmg_fire,
        dmgEarth = this.dmg_earth,
        dmgWater = this.dmg_water,
        dmgAir = this.dmg_air,
        resFire = this.res_fire,
        resEarth = this.res_earth,
        resWater = this.res_water,
        resAir = this.res_air,
        x = this.x,
        y = this.y,
        cooldown = this.cooldown,
        weaponSlot = this.weapon_slot,
        runeSlot = this.rune_slot,
        shieldSlot = this.shield_slot,
        helmetSlot = this.helmet_slot,
        bodyArmorSlot = this.body_armor_slot,
        legArmorSlot = this.leg_armor_slot,
        bootsSlot = this.boots_slot,
        ring1Slot = this.ring1_slot,
        ring2Slot = this.ring2_slot,
        amuletSlot = this.amulet_slot,
        artifact1Slot = this.artifact1_slot,
        artifact2Slot = this.artifact2_slot,
        artifact3Slot = this.artifact3_slot,
        utility1Slot = this.utility1_slot,
        utility1SlotQuantity = this.utility1_slot_quantity,
        utility2Slot = this.utility2_slot,
        utility2SlotQuantity = this.utility2_slot_quantity,
        bagSlot = this.bag_slot,
        task = this.task,
        taskType = this.task_type,
        taskProgress = this.task_progress,
        taskTotal = this.task_total,
        inventoryMaxItems = this.inventory_max_items,
        cooldownExpiration = this.cooldown_expiration,
        inventory = null // not persisted in CharacterEntity
    )
}
